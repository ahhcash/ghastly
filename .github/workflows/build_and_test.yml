name: Build

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build_and_test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.23'
          cache: true

      - name: Install System Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            build-essential \
            pkg-config

      - name: Install ONNX runtime
        run: |
          python -m pip install --upgrade pip
          pip install onnxruntime
          
      - name: Verify ONNX runtime installed
        run: |
          python -c "import onnxruntime; print(f'ONNX Runtime Version: {onnxruntime.__version__}')"

      - name: Install Rust toolchain
        uses: actions-rust-lang/setup-rust-toolchain@v1

      - name: release-downloader
        uses: robinraju/release-downloader@v1.11
        with:
          latest: 'true'
          repository: 'daulet/tokenizers'
          zipBall: 'false'
          fileName: 'libtokenizers.linux-x86_64.tar.gz'
          out-file-path: './libs/static/libtokenizers'
          extract: 'true'

      - name: Install linter
        uses: golangci/golangci-lint-action@v6.1.1

      - name: Build
        run: make
        env:
          CGO_ENABLED: 1
          CGO_LDFLAGS: -L./libs/static/libtokenizers

      - name: Install Goveralls
        run: go install github.com/mattn/goveralls@latest

      - name: Send Coverage
        env:
          COVERALLS_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: goveralls -coverprofile=coverage.out -service=github