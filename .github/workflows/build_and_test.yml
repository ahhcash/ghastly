name: Build

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build_and_test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.23'
          cache: true

      - name: Install System Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            build-essential \
            pkg-config

      - name: Install ONNX runtime
        run: |
          python -m pip install --upgrade pip
          pip install onnxruntime
          
      - name: Verify ONNX runtime installed
        run: |
          python -c "import onnxruntime; print(f'ONNX Runtime Version: {onnxruntime.__version__}')"

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          components: rustfmt, clippy

      - name: Cache Rust dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            libs/static/libtokenizers/target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Build libtokenizers
        run: |
          cd libs/static/libtokenizers
          cargo build --release
          cd ../../..

      - name: Build
        run: make
        env:
          CGO_ENABLED: 1
          LD_LIBRARY_PATH: /usr/local/lib:$LD_LIBRARY_PATH

      # Run tests with coverage
      - name: Test Coverage
        run: make coverage
        env:
          CGO_ENABLED: 1
          LD_LIBRARY_PATH: /usr/local/lib:$LD_LIBRARY_PATH

      - name: Install Goveralls
        run: go install github.com/mattn/goveralls@latest

      - name: Send Coverage
        env:
          COVERALLS_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: goveralls -coverprofile=coverage.out -service=github